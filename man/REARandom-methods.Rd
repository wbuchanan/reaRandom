% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reaRandomConstructorMethods.R, R/reaRandomGetterMethods.R
\docType{methods}
\name{setIntegers}
\alias{getRandom}
\alias{setBLOBs}
\alias{setDecimals}
\alias{setIntegers}
\alias{setNormal}
\alias{setStrings}
\alias{setUniqueID}
\title{Random Integers}
\usage{
setIntegers(id, n, min, max, replacement, base)

setDecimals(id, n, decimalPlaces, replacement)

setNormal(id, n, mean, standardDeviation, significantDigits)

setStrings(id, n, length, characters, replacement)

setUniqueID(id, n)

setBLOBs(id, n, size, format)

getRandom(simplifyVector, simplifyDataFrame, simplifyMatrix, flatten)
}
\arguments{
\item{id}{ID Used for retrieval and matching of API call request and payload; default is 42.}

\item{n}{Number of random values to generate; default is 1.}

\item{min}{The minimum value integer to use for the request; default is 1,000,000.}

\item{max}{The maximum value integer to use for the request; default is 9,999,999.}

\item{replacement}{Whether the values should be sampled with or without replacement
from the distribution.}

\item{base}{Which base value should the numbers be reported in;
defaults to base 10 (decimal).  A value of 2 would provide binary values,
a value of 8 would return octal values, and value of 16 would return
hexadecimal values.}

\item{decimalPlaces}{The number of decimal places to return.  Must be in [1, 20]; defaults to 1.}

\item{mean}{Value of the mean for the distribution from which to draw random numbers.
Must be in [-1e6, 1e6]; defaults to 0.}

\item{standardDeviation}{Value for the standard deviation of the distribution.
Must be in [-1e6, 1e6]; defaults to 1.}

\item{significantDigits}{The number of digits beyond the decimal to retain.
Must be in [2, 20]; defaults to 2.}

\item{length}{The number of characters to include in each random string (must be in [1, 20])}

\item{characters}{The set of characters from which to generate random strings.
Must have length <= 80.}

\item{size}{The size in bits of the objects to return (must be divisible by 8)}

\item{format}{Either 'base64' or 'hex' to specify how the BLOBs are serialized}

\item{simplifyVector}{A logical passed to the underlying call to jsonlite::fromJSON()}

\item{simplifyDataFrame}{A logical passed to the underlying call to jsonlite::fromJSON()}

\item{simplifyMatrix}{A logical passed to the underlying call to jsonlite::fromJSON()}

\item{flatten}{A logical passed to the underlying call to jsonlite::fromJSON()}
}
\description{
Method to create REARandom object used for Random.org method
call to get random integers.

Creates object used to Random.org's generateDecimalFractions API method

Creates object used to Random.org's generateGaussians API method

Creates object used to Random.org's generateStrings API method

Creates object used to Random.org's generateUUIDs API method

Creates object used to Random.org's generateBlobs API method

Method to retrieve random values from Random.org API
}
\details{
Method to create object to pass to the generateIntegers method of the
Random.org API

Method to create object used for generateDecimalFractions API Method

Method to create object used for generateGaussians API Method

Method to create object used for generateStrings API Method

Method to create object used for generateUUIDs API Method

Method to create object used for generateBlobs API Method

Getting Random values from Random.org
}

